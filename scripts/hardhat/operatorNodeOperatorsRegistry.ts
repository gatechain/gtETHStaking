import { ethers } from "hardhat";
import * as dotenv from "dotenv";
dotenv.config();
const hre = require("hardhat");
async function main() {
console.log(`Running deploy script... 👨‍🍳`);

const key: string = process.env.PRIVATE_KEY3 as string;
if (!key) {
    throw new Error("Please set your PRIVATE_KEY3 in a .env file");
}

const [owner] = await hre.ethers.getSigners();
console.log("wallet:", owner.address);

function sleep(ms:any) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

var abi = [{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"APP_AUTH_FAILED","type":"error"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"CANT_CLEAR_PENALTY","type":"error"},{"inputs":[],"name":"DISTRIBUTION_NOT_READY","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"EXITED_VALIDATORS_COUNT_DECREASED","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"INVALID_ALLOCATED_KEYS_COUNT","type":"error"},{"inputs":[],"name":"INVALID_REPORT_DATA","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"LIDO_REWARD_ADDRESS","type":"error"},{"inputs":[],"name":"MAX_OPERATORS_COUNT_EXCEEDED","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"OUT_OF_RANGE","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"inputs":[],"name":"VALUE_IS_THE_SAME","type":"error"},{"inputs":[],"name":"VETTED_KEYS_COUNT_INCREASED","type":"error"},{"inputs":[],"name":"WRONG_NAME_LENGTH","type":"error"},{"inputs":[],"name":"WRONG_OPERATOR_ACTIVE_STATE","type":"error"},{"inputs":[],"name":"ZERO_ADDRESS","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"depositedValidatorsCount","type":"uint256"}],"name":"DepositedSigningKeysCountChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"exitedValidatorsCount","type":"uint256"}],"name":"ExitedSigningKeysCountChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"keysOpIndex","type":"uint256"}],"name":"KeysOpIndexSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"locatorAddress","type":"address"}],"name":"LocatorContractSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"active","type":"bool"}],"name":"NodeOperatorActiveSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"address","name":"rewardAddress","type":"address"},{"indexed":false,"internalType":"uint64","name":"stakingLimit","type":"uint64"}],"name":"NodeOperatorAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"NodeOperatorNameSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipientAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"penalizedAmount","type":"uint256"}],"name":"NodeOperatorPenalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"}],"name":"NodeOperatorPenaltyCleared","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"address","name":"rewardAddress","type":"address"}],"name":"NodeOperatorRewardAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"uint64","name":"totalKeysTrimmed","type":"uint64"}],"name":"NodeOperatorTotalKeysTrimmed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"NonceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum NodeOperatorsRegistry.RewardDistributionState","name":"state","type":"uint8"}],"name":"RewardDistributionStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"rewardAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"rewardAmount","type":"uint256"}],"name":"RewardsDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"moduleType","type":"bytes32"}],"name":"StakingModuleTypeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"stuckPenaltyDelay","type":"uint256"}],"name":"StuckPenaltyDelayChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stuckValidatorsCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"refundedValidatorsCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stuckPenaltyEndTimestamp","type":"uint256"}],"name":"StuckPenaltyStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"targetValidatorsCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"targetLimitMode","type":"uint256"}],"name":"TargetValidatorsCountChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalValidatorsCount","type":"uint256"}],"name":"TotalSigningKeysCountChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"nodeOperatorId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"approvedValidatorsCount","type":"uint256"}],"name":"VettedSigningKeysCountChanged","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANAGE_NODE_OPERATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MANAGE_SIGNING_KEYS","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NODE_OPERATORS_COUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NODE_OPERATOR_NAME_LENGTH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_STUCK_PENALTY_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SET_NODE_OPERATOR_LIMIT_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_ROUTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"activateNodeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_rewardAddress","type":"address"}],"name":"addNodeOperator","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint256","name":"_keysCount","type":"uint256"},{"internalType":"bytes","name":"_publicKeys","type":"bytes"},{"internalType":"bytes","name":"_signatures","type":"bytes"}],"name":"addSigningKeys","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"clearNodeOperatorPenalty","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"deactivateNodeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_nodeOperatorIds","type":"bytes"},{"internalType":"bytes","name":"_vettedSigningKeysCounts","type":"bytes"}],"name":"decreaseVettedSigningKeysCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"distributeReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActiveNodeOperatorsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"bool","name":"_fullInfo","type":"bool"}],"name":"getNodeOperator","outputs":[{"internalType":"bool","name":"active","type":"bool"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"rewardAddress","type":"address"},{"internalType":"uint64","name":"totalVettedValidators","type":"uint64"},{"internalType":"uint64","name":"totalExitedValidators","type":"uint64"},{"internalType":"uint64","name":"totalAddedValidators","type":"uint64"},{"internalType":"uint64","name":"totalDepositedValidators","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_offset","type":"uint256"},{"internalType":"uint256","name":"_limit","type":"uint256"}],"name":"getNodeOperatorIds","outputs":[{"internalType":"uint256[]","name":"nodeOperatorIds","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"getNodeOperatorIsActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"getNodeOperatorSummary","outputs":[{"internalType":"uint256","name":"targetLimitMode","type":"uint256"},{"internalType":"uint256","name":"targetValidatorsCount","type":"uint256"},{"internalType":"uint256","name":"stuckValidatorsCount","type":"uint256"},{"internalType":"uint256","name":"refundedValidatorsCount","type":"uint256"},{"internalType":"uint256","name":"stuckPenaltyEndTimestamp","type":"uint256"},{"internalType":"uint256","name":"totalExitedValidators","type":"uint256"},{"internalType":"uint256","name":"totalDepositedValidators","type":"uint256"},{"internalType":"uint256","name":"depositableValidatorsCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNodeOperatorsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRewardDistributionState","outputs":[{"internalType":"enum NodeOperatorsRegistry.RewardDistributionState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_totalRewardAmount","type":"uint256"}],"name":"getRewardsDistribution","outputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bool[]","name":"penalized","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getSigningKey","outputs":[{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"bytes","name":"depositSignature","type":"bytes"},{"internalType":"bool","name":"used","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint256","name":"_offset","type":"uint256"},{"internalType":"uint256","name":"_limit","type":"uint256"}],"name":"getSigningKeys","outputs":[{"internalType":"bytes","name":"pubkeys","type":"bytes"},{"internalType":"bytes","name":"depositSignatures","type":"bytes"},{"internalType":"bool[]","name":"used","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStakingModuleSummary","outputs":[{"internalType":"uint256","name":"totalExitedValidators","type":"uint256"},{"internalType":"uint256","name":"totalDepositedValidators","type":"uint256"},{"internalType":"uint256","name":"depositableValidatorsCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStuckPenaltyDelay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"getTotalSigningKeyCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getType","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"getUnusedSigningKeyCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_type","type":"bytes32"},{"internalType":"uint256","name":"_stuckPenaltyDelay","type":"uint256"},{"internalType":"address","name":"_admin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_indexFrom","type":"uint256"},{"internalType":"uint256","name":"_indexTo","type":"uint256"}],"name":"invalidateReadyToDepositKeysRange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"isOperatorPenalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"}],"name":"isOperatorPenaltyCleared","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"locator","outputs":[{"internalType":"contract IGTETHLocator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_depositsCount","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"obtainDepositData","outputs":[{"internalType":"bytes","name":"publicKeys","type":"bytes"},{"internalType":"bytes","name":"depositSignatures","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"onExitedAndStuckValidatorsCountsUpdated","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"onRewardsMinted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"onWithdrawalCredentialsChanged","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint256","name":"_fromIndex","type":"uint256"},{"internalType":"uint256","name":"_keysCount","type":"uint256"}],"name":"removeSigningKeys","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IGTETHLocator","name":"_locator","type":"address"}],"name":"setLocator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"string","name":"_name","type":"string"}],"name":"setNodeOperatorName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"address","name":"_rewardAddress","type":"address"}],"name":"setNodeOperatorRewardAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint64","name":"_vettedSigningKeysCount","type":"uint64"}],"name":"setNodeOperatorStakingLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_delay","type":"uint256"}],"name":"setStuckPenaltyDelay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint256","name":"_exitedValidatorsCount","type":"uint256"},{"internalType":"uint256","name":"_stuckValidatorsCount","type":"uint256"}],"name":"unsafeUpdateValidatorsCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_nodeOperatorIds","type":"bytes"},{"internalType":"bytes","name":"_exitedValidatorsCounts","type":"bytes"}],"name":"updateExitedValidatorsCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint256","name":"_refundedValidatorsCount","type":"uint256"}],"name":"updateRefundedValidatorsCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_nodeOperatorIds","type":"bytes"},{"internalType":"bytes","name":"_stuckValidatorsCounts","type":"bytes"}],"name":"updateStuckValidatorsCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nodeOperatorId","type":"uint256"},{"internalType":"uint256","name":"_targetLimitMode","type":"uint256"},{"internalType":"uint256","name":"_targetLimit","type":"uint256"}],"name":"updateTargetValidatorsLimits","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}];
var contract = new ethers.Contract("0x8f34D14d0BA458D20a8a085cb71f47fe81C08246",abi,owner);

try {
    // 检查当前权限
    const hasRole = await contract.hasRole(await contract.MANAGE_NODE_OPERATOR_ROLE(), owner.address);
    console.log("当前是否有管理员权限:", hasRole);
    
    if (!hasRole) {
        console.log("授予管理员权限...");
        var grantTx = await contract.grantRole(await contract.MANAGE_NODE_OPERATOR_ROLE(), owner.address);
        await grantTx.wait();
        console.log("成功授予管理员权限");
    }

    const LocatorAddress = "0x42Aa599CD3db948f2d66F7dc14135804d0DBe1c7";
    // 获取当前已设置的 locator
    const currentLocator = await contract.locator();

    if (currentLocator.toLowerCase() !== LocatorAddress.toLowerCase()) {
        const tx = await contract.setLocator(LocatorAddress);
        await tx.wait();
        console.log("设置 Locator 成功:", LocatorAddress);
    } else {
        console.log("Locator 已设置，无需重复设置:", LocatorAddress);
    }

    // const rewardAddress = "0x03b2349fb8e6D6d13fa399880cE79750721E99D5";
    // console.log("添加运营商...");
    // var txAdd = await contract.addNodeOperator("test", rewardAddress);
    // console.log("交易hash:", txAdd.hash);
    // await txAdd.wait();
    // console.log("成功添加运营商");

    // 检查合约状态
    const operatorsCount = await contract.getNodeOperatorsCount();
    console.log("当前运营商数量:", operatorsCount.toString());

    // // 添加pubkey 和 singnature
    // const pubkey1 = "0x97baec5c7f41aa8b117c88c380ec3c52ddc2ca9ffa2e566565a9d2632854a9c1dae45883c4f59b1485e336a472baab43";
    // const signature1 = "0xb73cdc1150e187b11a344f20de2c1d4baed5f134741ad334ff00cb1ba37d2f4752b548e42b1c6abfc395d806ee0fea0719e49d7143ef201a6db52d1d92767f993fc99b3d36344037a7373714c82bc584e0d20c6b012320978007494ce9b4a763";
    // const pubkey2 = "0x864792618396e884acaff8ce1d01fd14b5443431200dac55a25c479a8ac90fb7440a452df20aec73cc274238f5ed2df1";
    // const signature2 = "0x850942a9409e9a249e63260cdd4c2392f41e0f9797f067255baaf2dd452d593c717ddf2da7735866b70b63a01b8df0c80c47f0d951a2b0088235a3944f4f093d7c980d2d3c054a95bedf3a7436d41b8fff83ecb0877eebf2e5e0900f41bb52c4";
    // const pubkey3 = "0xa94cea072ee758285671df437cb80195590b3dea1d81ca9e357edfc16ef5bc9107e37a547b283d465e9e8641efd06b84";
    // const signature3 = "0xa6666a08e70085c772853a37c369c967eb755893770f71e941e822d8233cd1dd00fe79db83658574996026f69b1d525012ead73b46e87821c2fd9404cbf5ce12f3303950dac867407bb5e617f0292c783622736f65ff79990dfa9941544e5769";
    // const publicKeysBytes = ethers.concat([ethers.getBytes(pubkey1), ethers.getBytes(pubkey2), ethers.getBytes(pubkey3)]);       // 144 bytes
    // const signaturesBytes = ethers.concat([ethers.getBytes(signature1), ethers.getBytes(signature2), ethers.getBytes(signature3)]);    // 288 bytes
    // const tx = await contract.addSigningKeys(0, 3, publicKeysBytes, signaturesBytes);
    // await tx.wait();
    // console.log("添加 pubkey 和 signature 成功");

    // 批量添加pubkey 和 signature
    const pubkeys = "0x909a7a7a21141f52c43f6b9f1a36610cefac8fe34c66643e50cc540d49a7b4747297e960e2dc5fec15ab5639033014cab5d743e161c9c08469bc8a95650d8b15564873c80eb94959e1192b410e21915225ae6d7a16aa0e900b75805bad738312a237c686a8eb07634a0f5a5a72496a2d03b2664a1e155a1be89eb4f254f2f67baf467e1e8e005fcd4286f22a9e4a50f6b042d9266951e1130d18d9f5e0d643a3f75889574b2d93937391d5fab1a9d94abbdca895cf52501cc589224264f29453"
    const signatures = "0xb8dec28a4e7c0a146fc0e886f45d4174207af760a30c4ef03ef0b85c9395a30d303303dd9e9adbd7da639f2cd11a3413047033fe1e3b87d57f07726ce28d913a1f64f7e5e8c38019d9168c4bdbb45e9c8048c38eb98786225439e978609e9a36a7a1a18296c8e1508be4597d2e7087117a113e12a694d6a241ede3196d15f10c1ad83374968de649e9e339798a0cb49103f3fafbe2589d3e61b08e3ed262c722dade139b2457a9bd2c74b3509e8fff7101f4801622c15a253b80886653c02bbea9a7fa4a26fbf7ba01e1772c2656a2a48803dcba34de022016a4aa626b145f050d6cca912eab07ced630b2f14f2f8eff17733f841eac07597e775f44a4055a326dc23f5939a4ff531e09db2c3b2350e29913376614fc84bcb16543f49ccb98d8aa397038083b1210ad0519e1249c1299b30684ac1e8f76ab2ca0553d050c8dabfad04917ae8c4a4fac03e7a1280f8a49188ce1ca65abe4c5f710c8988f65888fc95335ab32f92795a446a6250afe2fb5c1ccac94645cfa1fb334a21cfa0f7a05"
    const publicKeysBytes = ethers.getBytes(pubkeys);
    const signaturesBytes = ethers.getBytes(signatures);
    const tx = await contract.addSigningKeys(0, 4, publicKeysBytes, signaturesBytes);
    await tx.wait();
    console.log("添加 pubkeys 和 signatures 成功");

    // // 设置MANAGE_SIGNING_KEYS权限
    // const signAddress1 = "0xfac592e1cd63a9423a2e769764335bb2f59e9b0a";
    // const signAddress2 = "0x94E4AF739Ec4793f50513AD9436Af809A0E7A4ef";
    // const SignTx = await contract.grantRole(await contract.MANAGE_SIGNING_KEYS(), signAddress1);
    // await SignTx.wait();
    // const SignTx2 = await contract.grantRole(await contract.MANAGE_SIGNING_KEYS(), signAddress2); 
    // await SignTx2.wait();
    // console.log("成功授予MANAGE_SIGNING_KEYS权限");

    // // 删除pubkey 和 singnature
    // const tx2 = await contract.removeSigningKeys(0, 2, 1);
    // await tx2.wait();
    // console.log("删除 pubkey 和 signature 成功");

    // // 设置limit
    // var grantTx = await contract.grantRole(await contract.SET_NODE_OPERATOR_LIMIT_ROLE(), owner.address);
    // await grantTx.wait();
    // console.log("成功授予SET_NODE_OPERATOR_LIMIT_ROLE权限");
    // var setTx = await contract.setNodeOperatorStakingLimit(0, 3);
    // await setTx.wait();
    // console.log("成功设置limit");

    // // 设置staking权限
    // var stakingRouterAddress = "0xcd59e12Ed51108568f8963a12959b5d6447B32AD";
    // var grantTx = await contract.grantRole(await contract.STAKING_ROUTER_ROLE(), stakingRouterAddress);
    // await grantTx.wait();
    // console.log("成功授予STAKING_ROUTER_ROLE权限");

    // // 查看运营商singKeys数量
    // const [pubkeys, depositSignatures, used] = await contract.getSigningKeys(0, 0, 3);
    // console.log("运营商 pubkeys (hex):", ethers.hexlify(pubkeys));
    // console.log("运营商 depositSignatures (hex):", ethers.hexlify(depositSignatures));
    // console.log("运营商 used:", used);

} catch (error) {
    console.error("详细错误信息:", error);
    
    // 尝试获取更多合约信息
    try {
        const locator = await contract.locator();
        console.log("Locator地址:", locator);
    } catch (e) {
        console.log("无法获取Locator地址:", e.message);
    }
}

}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
});